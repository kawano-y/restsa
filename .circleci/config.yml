# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4
    parallelism: 100

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx1000m
      TERM: dumb

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: gradle dependencies

      - save_cache:
          paths:
            - ~/.gradle
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests!
#      - run: gradle test

  deploy:
    machine:
      enabled: true
    working_directory: ~/circleci-restsa-workflows
    environment:
      RESTSA_APP_ST: "restsa"
      JAVA_HOME: /usr/lib/jvm/java-8-oracle
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
              - "92:bd:03:65:5c:9d:44:24:cc:20:cb:47:e2:e7:ad:97"
      - run:
          name: Master を restsa にデプロイ
          command: >
            ssh ${USER_NAME}@${HOST_NAME} 'pwd &&
            echo "start ssh-agent" &&
            eval "$(ssh-agent)" && ssh-add ~/.ssh/ec2_github_key &&
            cd restsa &&
            git pull &&
            ./gradlew build &&
            ssh-agent -k'
# テストが成功した場合のみ、deployを実行するようにします。
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          # masterブランチがpushされた場合のみdeployするようにする。
          filters:
            branches:
              only: master
